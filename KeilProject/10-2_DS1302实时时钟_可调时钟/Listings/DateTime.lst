C51 COMPILER V9.60.7.0   DATETIME                                                          04/24/2024 00:34:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DATETIME
OBJECT MODULE PLACED IN .\Objects\DateTime.obj
COMPILER INVOKED BY: D:\Program\MDK51_32\C51\BIN\C51.EXE DateTime.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\DateTime.lst) OBJECT(.\Objects\DateTime.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include "DS1302.h"
   3          
   4          const char *WeekDay[] = {"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"};
   5          
   6          void ShowYear()
   7          {
   8   1          LCD_ShowNum(1,1,DS1302_DateTime[0],2);
   9   1      }
  10          
  11          void ShowMonth()
  12          {
  13   1          LCD_ShowNum(1,4,DS1302_DateTime[1],2);
  14   1      }
  15          
  16          void ShowDate()
  17          {
  18   1          LCD_ShowNum(1,7,DS1302_DateTime[2],2);
  19   1      }
  20          
  21          void ShowHour()
  22          {
  23   1          LCD_ShowNum(2,1,DS1302_DateTime[3],2);
  24   1      }
  25          
  26          void ShowMinute()
  27          {
  28   1          LCD_ShowNum(2,4,DS1302_DateTime[4],2);
  29   1      }
  30          
  31          void ShowSecond()
  32          {
  33   1          LCD_ShowNum(2,7,DS1302_DateTime[5],2);
  34   1      }
  35          
  36          void ShowDay()
  37          {
  38   1          LCD_ShowString(1,10,WeekDay[DS1302_DateTime[6]%7]);
  39   1      }
  40          
  41          void ClearYear()
  42          {
  43   1          LCD_ShowString(1,1,"  ");
  44   1      }
  45          
  46          void ClearMonth()
  47          {
  48   1          LCD_ShowString(1,4,"  ");
  49   1      }
  50          
  51          void ClearDate()
  52          {
  53   1          LCD_ShowString(1,7,"  ");
  54   1      }
C51 COMPILER V9.60.7.0   DATETIME                                                          04/24/2024 00:34:34 PAGE 2   

  55          
  56          void ClearHour()
  57          {
  58   1          LCD_ShowString(2,1,"  ");
  59   1      }
  60          
  61          void ClearMinute()
  62          {
  63   1          LCD_ShowString(2,4,"  ");
  64   1      }
  65          
  66          void ClearSecond()
  67          {
  68   1          LCD_ShowString(2,7,"  ");
  69   1      }
  70          
  71          void ClearDay()
  72          {
  73   1          LCD_ShowString(1,10,"   ");
  74   1      }
  75          
  76          /**
  77            * @brief 显示日期时间
  78            * @param  无
  79            * @retval 无
  80            */
  81          void ShowDateTime()
  82          {
  83   1          DS1302_GetDateTime();
  84   1          
  85   1          ShowYear();
  86   1          ShowMonth();
  87   1          ShowDate();
  88   1          ShowHour();
  89   1          ShowMinute();
  90   1          ShowSecond();
  91   1          ShowDay();
  92   1      }
  93          
  94          /**
  95            * @brief 闪烁日期时间
  96            * @param  无
  97            * @retval 无
  98            */
  99          void FlickerDateTime(unsigned char TimerSelect,FlickerFlag)
 100          {
 101   1          if(TimerSelect==0 && FlickerFlag==1) ClearYear();
 102   1          else ShowYear();
 103   1          
 104   1          if(TimerSelect==1 && FlickerFlag==1) ClearMonth();
 105   1          else ShowMonth();
 106   1          
 107   1          if(TimerSelect==2 && FlickerFlag==1) ClearDate();
 108   1          else ShowDate();
 109   1          
 110   1          if(TimerSelect==3 && FlickerFlag==1) ClearHour();
 111   1          else ShowHour();
 112   1          
 113   1          if(TimerSelect==4 && FlickerFlag==1) ClearMinute();
 114   1          else ShowMinute();
 115   1          
 116   1          if(TimerSelect==5 && FlickerFlag==1) ClearSecond();
C51 COMPILER V9.60.7.0   DATETIME                                                          04/24/2024 00:34:34 PAGE 3   

 117   1          else ShowSecond();
 118   1          
 119   1          if(TimerSelect==6 && FlickerFlag==1) ClearDay();
 120   1          else ShowDay();
 121   1      }
 122          
 123          
 124          /**
 125            * @brief 获取二月天数
 126            * @param  无
 127            * @retval 无
 128            */
 129          unsigned char GetFebruaryDay()
 130          {
 131   1          char Year=DS1302_DateTime[0];
 132   1          
 133   1          // 大闰年
 134   1          if(Year%400 == 0)
 135   1              return 29;
 136   1          // 小闰年
 137   1          else if(Year%4 == 0 && Year%100 != 0) 
 138   1              return 29;
 139   1          // 非闰年
 140   1          else 
 141   1              return 28;
 142   1      }
 143          
 144          /**
 145            * @brief 重置范围
 146            * @param  无
 147            * @retval 无
 148            */
 149          char ResetRange(char Temp,Min,Max)
 150          {
 151   1          if(Temp>Max) Temp=Min;
 152   1          if(Temp<Min) Temp=Max;
 153   1          return Temp;
 154   1      }
 155          
 156          /**
 157            * @brief 根据月份重置天数
 158            * @param  无
 159            * @retval 无
 160            */
 161          void ResetDateByMonth()
 162          {
 163   1          char Month=DS1302_DateTime[1];
 164   1          char Date=DS1302_DateTime[2];
 165   1          
 166   1          switch(Month)
 167   1          {
 168   2              case 1:
 169   2              case 3:
 170   2              case 5:
 171   2              case 7:
 172   2              case 8:
 173   2              case 10:
 174   2              case 12:
 175   2                  Date=ResetRange(Date,1,31);
 176   2                  break;
 177   2              case 4:
 178   2              case 6:
C51 COMPILER V9.60.7.0   DATETIME                                                          04/24/2024 00:34:34 PAGE 4   

 179   2              case 9:
 180   2              case 11:
 181   2                  Date=ResetRange(Date,1,30);
 182   2                  break;
 183   2              case 2:
 184   2                  Date=ResetRange(
 185   2                      Date,
 186   2                      1,
 187   2                      GetFebruaryDay()
 188   2                  );
 189   2                  break;
 190   2          }
 191   1          
 192   1          DS1302_DateTime[2]=Date;
 193   1      }
 194          
 195          /**
 196            * @brief 校正日期时间
 197            * @param  无
 198            * @retval 无
 199            */
 200          void AdjustDateTime(unsigned char TimerSelect)
 201          {
 202   1          if(TimerSelect==0)
 203   1          {
 204   2              DS1302_DateTime[TimerSelect]=ResetRange(
 205   2                  DS1302_DateTime[TimerSelect],
 206   2                  0,99
 207   2              );
 208   2              ResetDateByMonth();
 209   2          }
 210   1          else if(TimerSelect==1)
 211   1          {
 212   2              DS1302_DateTime[TimerSelect]=ResetRange(
 213   2                  DS1302_DateTime[TimerSelect],
 214   2                  1,12
 215   2              );
 216   2              ResetDateByMonth();
 217   2          }
 218   1          else if(TimerSelect==2)
 219   1          {
 220   2              ResetDateByMonth();
 221   2          }
 222   1          else if(TimerSelect==3)
 223   1          {
 224   2              DS1302_DateTime[TimerSelect]=ResetRange(
 225   2                  DS1302_DateTime[TimerSelect],
 226   2                  0,23
 227   2              );
 228   2          }
 229   1          else if(TimerSelect==4 || TimerSelect==5)
 230   1          {
 231   2              DS1302_DateTime[TimerSelect]=ResetRange(
 232   2                  DS1302_DateTime[TimerSelect],
 233   2                  0,59
 234   2              );
 235   2          }
 236   1          else if(TimerSelect==6)
 237   1          {
 238   2              DS1302_DateTime[TimerSelect]=ResetRange(
 239   2                  DS1302_DateTime[TimerSelect],
 240   2                  0,6
C51 COMPILER V9.60.7.0   DATETIME                                                          04/24/2024 00:34:34 PAGE 5   

 241   2              );
 242   2          }
 243   1      }
 244          
 245          /**
 246            * @brief 调大日期时间
 247            * @param  无
 248            * @retval 无
 249            */
 250          void IncreaseDateTime(unsigned char TimerSelect)
 251          {
 252   1          DS1302_DateTime[TimerSelect]++;
 253   1          AdjustDateTime(TimerSelect);
 254   1      }
 255          
 256          /**
 257            * @brief 调小日期时间
 258            * @param  无
 259            * @retval 无
 260            */
 261          void DecreaseDateTime(unsigned char TimerSelect)
 262          {
 263   1          DS1302_DateTime[TimerSelect]--;
 264   1          AdjustDateTime(TimerSelect);
 265   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    715    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
