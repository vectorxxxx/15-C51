C51 COMPILER V9.60.7.0   IR                                                                05/02/2024 00:04:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Program\MDK51_32\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\IR.lst) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          
   5          // ÂÆö‰πâÂèòÈáè
   6          unsigned int IR_Time;          // ‰∏ãÈôçÊ≤øÈó¥ÈöîÊó∂Èó¥
   7          unsigned char IR_State;         // Áä∂ÊÄÅÊú∫Áä∂ÊÄÅ
   8          
   9          unsigned char IR_Data[4];       // DataÊï∞ÊçÆ‰∏¥Êó∂Â≠òÂÇ®
  10          unsigned char IR_pData;         // DataÊï∞ÊçÆÊåáÈíà
  11          
  12          unsigned char IR_DataFlag;      // DataÁä∂ÊÄÅ
  13          unsigned char IR_RepeatFlag;    // RepeatÁä∂ÊÄÅ
  14          
  15          unsigned char IR_Address;       // Âú∞ÂùÄÁ†Å
  16          unsigned char IR_Command;       // ÂëΩ‰ª§Á†Å
  17          
  18          /**
  19            * @brief Á∫¢Â§ñÈÅ•ÊéßÂàùÂßãÂåñ
  20            * @param  Êó†
  21            * @retval Êó†
  22            */
  23          void IR_Init(void)
  24          {
  25   1          Timer0_Init();
  26   1          Int0_Init();
  27   1      }
  28          
  29          /**
  30            * @brief Ëé∑ÂèñÁ∫¢Â§ñÊé•Êî∂Âô®Êî∂Âà∞ÁöÑÊï∞ÊçÆÂ∏ßÊ†áÂøó‰Ωç
  31            * @param  Êó†
  32            * @retval ÊòØÂê¶Êî∂Âà∞Êï∞ÊçÆÂ∏ßÔºå1‰∏∫Êî∂Âà∞Ôºå0‰∏∫Êú™Êî∂Âà∞
  33            */
  34          unsigned char IR_GetDataFlag(void)
  35          {
  36   1          unsigned char Tmp=IR_DataFlag;
  37   1          if(IR_DataFlag)IR_DataFlag=0;
  38   1          return Tmp;
  39   1      }
  40          
  41          /**
  42            * @brief Ëé∑ÂèñÁ∫¢Â§ñÊé•Êî∂Âô®Êî∂Âà∞ÁöÑËøûÂèëÂ∏ßÊ†áÂøó‰Ωç
  43            * @param  Êó†
  44            * @retval ÊòØÂê¶Êî∂Âà∞ËøûÂèëÂ∏ßÔºå1‰∏∫Êî∂Âà∞Ôºå0‰∏∫Êú™Êî∂Âà∞
  45            */
  46          unsigned char IR_GetRepeatFlag(void)
  47          {
  48   1          unsigned char Tmp=IR_RepeatFlag;
  49   1          if(IR_RepeatFlag)IR_RepeatFlag=0;
  50   1          return Tmp;
  51   1      }
  52          
  53          /**
  54            * @brief Ëé∑ÂèñÁ∫¢Â§ñÊé•Êî∂Âô®Êî∂Âà∞ÁöÑÂú∞ÂùÄÁ†Å
C51 COMPILER V9.60.7.0   IR                                                                05/02/2024 00:04:52 PAGE 2   

  55            * @param  Êó†
  56            * @retval Êî∂Âà∞ÁöÑÂú∞ÂùÄÁ†Å
  57            */
  58          unsigned char IR_GetAddress(void)
  59          {
  60   1          return IR_Address;
  61   1      }
  62          
  63          /**
  64            * @brief Á∫¢Â§ñÈÅ•ÊéßËé∑ÂèñÊî∂Âà∞ÁöÑÂëΩ‰ª§Á†Å
  65            * @param  Êó†
  66            * @retval Êî∂Âà∞ÁöÑÂëΩ‰ª§Á†Å
  67            */
  68          unsigned char IR_GetCommand(void)
  69          {
  70   1          return IR_Command;
  71   1      }
  72          
  73          /**
  74            * @brief ÂàùÂßãÂåñÂáÜÂ§á
  75            * @param  Êó†
  76            * @retval Êó†
  77            */
  78          void IR_Prepare(void)
  79          {
  80   1          Timer0_SetCounter(0);
  81   1          Timer0_Run(1);
  82   1          IR_State=1;
  83   1      }
  84          
  85          /**
  86            * @brief ÂºÄÂßã/ÈáçÂ§çÊ†áËÆ∞
  87            * @param  Êó†
  88            * @retval Êó†
  89            */
  90          void IR_StartRepeat(void)
  91          {
  92   1          IR_Time=Timer0_GetCounter();
  93   1          Timer0_SetCounter(0);  // Ëé∑ÂèñÂà∞‰∏ãÈôçÊ≤ø‰πãÈó¥ÁöÑÈó¥ÈöîÊó∂Èó¥ÂêéÁ´ãÂç≥Ê∏ÖÈõ∂Ôºå‰ª•‰æøÂØπ‰∏ã‰∏™‰∏ãÈ
             -ôçÊ≤ø‰πãÈó¥ÁöÑÈó¥ÈöîÊó∂Èó¥ËøõË°åËÆ°Êó∂
  94   1          
  95   1          // Start‰ø°Âè∑Ôºö‰ΩéÁîµÂπ≥9ms+È´òÁîµÂπ≥4.5msÔºàÂà§ÂÆöÂÄºÂú® 12MHz Êô∂ÊåØ‰∏ã‰∏∫ 13500ÔºåÂú® 11.0592MHz 
             -Êô∂ÊåØ‰∏ã‰∏∫ 12442Ôºâ
  96   1          if(IR_Time>13500*(11.0592/12)-500 && IR_Time<13500*(11.0592/12)+500)
  97   1          {
  98   2              IR_State=2;
  99   2          }
 100   1          // Repeat‰ø°Âè∑Ôºö‰ΩéÁîµÂπ≥9ms+È´òÁîµÂπ≥2.25msÔºàÂà§ÂÆöÂÄºÂú® 12MHz Êô∂ÊåØ‰∏ã‰∏∫ 11250ÔºåÂú® 11.0592MH
             -z Êô∂ÊåØ‰∏ã‰∏∫ 10368Ôºâ
 101   1          else if(IR_Time>11250*(11.0592/12)-500 && IR_Time<11250*(11.0592/12)+500)
 102   1          {
 103   2              IR_RepeatFlag=1;
 104   2              // ÈáçÂ§çÊåá‰ª§Êó†ÈúÄËøõË°åÂêéÁª≠ÁöÑËØªÂèñÊï∞ÊçÆÊìç‰ΩúÔºåÁõ¥Êé•‰ªé‰∏ä‰∏ÄÊ¨°Êï∞ÊçÆ‰∏≠ËØªÂèñ
 105   2              // ÂÅúÊ≠¢ÂÆöÊó∂Âô®ÔºåÂπ∂Â∞ÜÁä∂ÊÄÅÁΩÆ‰∏∫ÂàùÂßãÁä∂ÊÄÅÔºåÁ≠âÂæÖ‰∏ã‰∏ÄÊ¨°Â§ñÈÉ®‰∏≠Êñ≠ÈáçÊñ∞ÂºÄÂßã
 106   2              Timer0_Run(0);
 107   2              IR_State=0; 
 108   2          }
 109   1          else 
 110   1          {
 111   2              IR_State=1; 
 112   2          }
 113   1      
C51 COMPILER V9.60.7.0   IR                                                                05/02/2024 00:04:52 PAGE 3   

 114   1      }
 115          
 116          /**
 117            * @brief ËØªÂèñÊï∞ÊçÆ
 118            * @param  Êó†
 119            * @retval Êó†
 120            */
 121          void IR_ReadData(void)
 122          {
 123   1          IR_Time=Timer0_GetCounter();
 124   1          Timer0_SetCounter(0);
 125   1          
 126   1          // ÈÄªËæë0Ôºö‰ΩéÁîµÂπ≥560us+È´òÁîµÂπ≥560us
 127   1          if(IR_Time>1120-500 && IR_Time<1120+500)
 128   1          {
 129   2              IR_Data[IR_pData/8]&=~(0x01<<(IR_pData%8)); // ÊåáÈíàÊâÄÊåá‰ΩçÁΩÆ0
 130   2              IR_pData++;
 131   2          }
 132   1          // ÈÄªËæë1Ôºö‰ΩéÁîµÂπ≥560us+È´òÁîµÂπ≥1690us
 133   1          else if(IR_Time>2250-500 && IR_Time<2250+500)
 134   1          {
 135   2              IR_Data[IR_pData/8]|=0x01<<(IR_pData%8);    // ÊåáÈíàÊâÄÊåá‰ΩçÁΩÆ1
 136   2              IR_pData++;
 137   2          }
 138   1          else 
 139   1          {
 140   2              IR_pData=0;                                 // ÊåáÈíàÈáçÁΩÆ
 141   2              IR_State=1;                                 // Êï∞ÊçÆËØªÂèñÊúâËØØÔºåÂõûÂΩíStart/RepeatÁä∂ÊÄÅ
 142   2          }
 143   1          
 144   1          // ËØªÂèñ32‰ΩçÊï∞ÊçÆÂêéÔºåËøõË°åÂèçÁ†ÅÊ†°È™å
 145   1          if(IR_pData>=32)
 146   1          {
 147   2              IR_pData=0;
 148   2              if(IR_Data[0]==~IR_Data[1] && IR_Data[2]==~IR_Data[3])
 149   2              {
 150   3                  IR_Address=IR_Data[0];
 151   3                  IR_Command=IR_Data[2];
 152   3                  IR_DataFlag=1;
 153   3              }
 154   2              // ‰ªªÂä°ÁªìÊùüÔºåÂÖ≥Èó≠ÂÆöÊó∂Âô®ÔºåÂπ∂ÈáçÁΩÆÁä∂ÊÄÅ
 155   2              Timer0_Run(0);
 156   2              IR_State=0; 
 157   2          }
 158   1      }
 159          
 160          /**
 161            * @brief Â§ñÈÉ®‰∏≠Êñ≠0ÁªàÁ´ØÊâßË°åÁ®ãÂ∫è
 162            * @param  Êó†
 163            * @retval Êó†
 164            */
 165          void Int0_Routine(void)     interrupt 0
 166          {
 167   1          // 0‚Äî‚ÄîÁ©∫Èó≤Áä∂ÊÄÅ
 168   1          if(IR_State==0)
 169   1          {
 170   2              IR_Prepare();
 171   2          }
 172   1          // 1‚Äî‚ÄîStart/RepeatÁä∂ÊÄÅ
 173   1          else if(IR_State==1)
 174   1          {
 175   2              IR_StartRepeat();
C51 COMPILER V9.60.7.0   IR                                                                05/02/2024 00:04:52 PAGE 4   

 176   2          }
 177   1          // 2‚Äî‚ÄîDataÁä∂ÊÄÅ
 178   1          else if(IR_State==2)
 179   1          {
 180   2              IR_ReadData();
 181   2          }
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    422    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
