C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2024 22:47:33 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program\MDK51_32\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          #include "Key.h"
   4          #include "Nixie.h"
   5          #include "AT24C02.h"
   6          #include "Delay.h"
   7          
   8          unsigned char KeyNum;
   9          unsigned char ChronometerStatus;
  10          unsigned char Min,Sec,MiniSec;
  11          
  12          /**
  13            * @brief 开始/暂停秒表
  14            * @param  无
  15            * @retval 无
  16            */
  17          void Chronometer_Start_Pause()
  18          {
  19   1          ChronometerStatus=!ChronometerStatus;
  20   1      }
  21          
  22          /**
  23            * @brief 重置秒表
  24            * @param  无
  25            * @retval 无
  26            */
  27          void Chronometer_Reset()
  28          {
  29   1          Min=0;
  30   1          Sec=0;
  31   1          MiniSec=0;
  32   1      }
  33          
  34          /**
  35            * @brief 保存秒表
  36            * @param  无
  37            * @retval 无
  38            */
  39          void Chronometer_Save()
  40          {
  41   1          AT24C02_WriteData(0,Min);
  42   1          Delay(5); // 很重要
  43   1          AT24C02_WriteData(1,Sec);
  44   1          Delay(5); // 很重要
  45   1          AT24C02_WriteData(2,MiniSec);
  46   1          Delay(5); // 很重要
  47   1      }
  48          
  49          /**
  50          * @brief 恢复秒表
  51            * @param  无
  52            * @retval 无
  53            */
  54          void Chronometer_Recover()
C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2024 22:47:33 PAGE 2   

  55          {
  56   1          Min=AT24C02_ReadData(0);
  57   1          Sec=AT24C02_ReadData(1);
  58   1          MiniSec=AT24C02_ReadData(2);
  59   1      }
  60          
  61          /**
  62            * @brief 显示秒表
  63            * @param  无
  64            * @retval 无
  65            */
  66          void Chronometer_Show()
  67          {
  68   1          Nixie(1,Min/10);
  69   1          Nixie(2,Min%10);
  70   1          Nixie(3,10);
  71   1          Nixie(4,Sec/10);
  72   1          Nixie(5,Sec%10);
  73   1          Nixie(6,10);
  74   1          Nixie(7,MiniSec/10);
  75   1          Nixie(8,MiniSec%10); 
  76   1      }
  77          
  78          void main()
  79          {
  80   1          Timer0_Init();
  81   1          while(1)
  82   1          {
  83   2              KeyNum=Key();
  84   2              
  85   2              // 开始/暂停
  86   2              if(KeyNum==1) Chronometer_Start_Pause();
  87   2              // 重置
  88   2              else if(KeyNum==2) Chronometer_Reset();
  89   2              // 保存
  90   2              else if(KeyNum==3) Chronometer_Save();
  91   2              // 恢复
  92   2              else if(KeyNum==4) Chronometer_Recover();
  93   2              
  94   2              // 数码管显示秒表
  95   2              Chronometer_Show();
  96   2          }
  97   1      }
  98          
  99          /**
 100            * @brief 秒表定时执行程序
 101            * @param  无
 102            * @retval 无
 103            */
 104          void Chronometer_Loop(void)
 105          {
 106   1          if(!ChronometerStatus) return;
 107   1          
 108   1          if(++MiniSec<100) return;
 109   1          MiniSec=0;
 110   1          
 111   1          if(++Sec<60) return;
 112   1          Sec=0;
 113   1          
 114   1          if(++Min<60) return;
 115   1          Min=0;
 116   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2024 22:47:33 PAGE 3   

 117          
 118          /**
 119            * @brief 定时器0中断程序
 120            * @param  无
 121            * @retval 无
 122            */
 123          void Timer0_Routine() interrupt 1
 124          {
 125   1          static unsigned int Counter1,Counter2,Counter3;
 126   1      
 127   1          // 重置定时器初始值
 128   1          TL0 = 0x66;
 129   1          TH0 = 0xFC;
 130   1      
 131   1          // 驱动独立按键
 132   1          if(++Counter1>=20)
 133   1          {
 134   2              Counter1=0;
 135   2              Key_Loop();
 136   2          }
 137   1          
 138   1          // 驱动数码管
 139   1          if(++Counter2>=2)
 140   1          {
 141   2              Counter2=0;
 142   2              Nixie_Loop();
 143   2          }
 144   1      
 145   1          // 驱动秒表
 146   1          if(++Counter3>=10)
 147   1          {
 148   2              Counter3=0;
 149   2              Chronometer_Loop();
 150   2          }
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    432    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
